% Find the true 3D peaks / local maxima in a dtmf
function true_peaks = dtmfdecode(S, F, T)
    
    % Frequency threshold
    freq_thr = 0.02;
    
    F11 = 546.1;
    F12 = 607.5;
    F13 = 668.8;
    F14 = 736.3;
    F21 = 951.1;
    F22 = 1049;
    F23 = 1160;

    % Variable that will store the peaks of the spectrogram
    true_peaks = zeros(length(F), length(T));
    
    % String with the detected keys sequence
    keys_str = '';
    
    % Check for peaks that are reagional maxima
    for i = 1:length(F)
        for j = 1:length(T)
            % Height treshold
            if abs(S(i, j)) < 80
                continue;
            end
            
            try
                if abs(S(i-1, j-1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i-1, j)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i-1, j+1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i+1, j-1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i+1, j)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i+1, j+1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i, j-1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            try
                if abs(S(i, j+1)) >= abs(S(i, j))
                    continue;
                end
            end
            
            true_peaks(i, j) = 1;
        end
    end
    
    % Retrieve peak indexes in frequency (row) and time (col)
    [row,col] = find(true_peaks);
    
    % Detect keys based on the peaks' frequencies
    for i = 1:length(row)
       if abs(F(row)*1000 - F11) < freq_thr
           if abs(F(row)*1000 - F11) < freq_thr
           
           
           elseif abs(F(row)*1000 - F12) < freq_thr

           elseif abs(F(row)*1000 - F13) < freq_thr
               
           end
           
       elseif abs(F(row)*1000 - F12) < freq_thr
           
       elseif abs(F(row)*1000 - F13) < freq_thr
           
       elseif abs(F(row)*1000 - F14) < freq_thr
           
       end
    end
end